import React, { useState } from 'react'
import { useEffect } from 'react';
import Card from './Card';
import FormField from './FormField'
import Loader from './Loader';
import axios from "axios";
import Typewriter from "typewriter-effect";
const RenderCards = ({ data, title, setAllPosts }) => {
  if (data?.length > 0) {
    return (
      data.map((post) => <Card key={post._id} data={data} setAllPosts={setAllPosts} {...post} />)
    );
  }

  return (
    <h2 className="mt-5 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
    const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);

  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState(null);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);
    axios.get("http://localhost:8080/api/post").then(res=>{console.log(res.data.data);setAllPosts(res.data.data.reverse())}).then(()=>setLoading(false)).catch((err)=>console.log(err))
   
  };

  useEffect(()=>{
  fetchPosts();
  },[])

  const handleSearchChange = (e) => {
    clearTimeout(searchTimeout);
    setSearchText(e.target.value);

    setSearchTimeout(
      setTimeout(() => {
        const searchResult = allPosts.filter((item) => item.name.toLowerCase().includes(searchText.toLowerCase()) || item.prompt.toLowerCase().includes(searchText.toLowerCase()));
        setSearchedResults(searchResult);
      }, 500),
    );
  };


  return (
    <section className="max-w-7xl mx-auto">
    <div>
      <h1 className="font-extrabold text-[#222328] text-[32px]">The Community Showcase</h1>
      <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">{localStorage.getItem("user")&& <>Hey <strong>{localStorage.getItem("user")}!</strong></>} Browse through a collection of imaginative and visually stunning images generated by DALL-E AI</p>
      {!localStorage.getItem("user")&&<strong className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Login to create your own AI generated images</strong>}
      
    </div>

    <div className="mt-16">
    <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={handleSearchChange}
        />
    </div>

    <div className="mt-10">
      {loading ? (
        <div className="flex justify-center items-center">
          <Loader />
        </div>
      ) : (
        <>
          {searchText && (
            <h2 className="font-medium text-[#666e75] text-xl mb-3">
              Showing Resuls for <span className="text-[#222328]">{searchText}</span>:
            </h2>
          )}
          <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
            {searchText ? (
              <RenderCards
                data={searchedResults}
                setAllPosts={setAllPosts}
                title="No Search Results Found"
              />
            ) : (
              <RenderCards
                data={allPosts}
                setAllPosts={setAllPosts}
                title="No Posts Yet"
              />
            )}
          </div>
        </>
      )}
    </div>
  </section>
  )
}

export default Home
